import { RowId, RowModel } from '../../../models/rows';
import { SortDirection, SortModel } from '../../../models/sortModel';
import { GridState } from '../core/gridState';
import { SortingState } from './sortingState';
export declare const sortedRowIdsSelector: import("reselect").OutputSelector<GridState, RowId[], (res: SortingState) => RowId[]>;
export declare const sortedRowsSelector: import("reselect").OutputSelector<GridState, RowModel[], (res1: RowId[], res2: Record<RowId, RowModel>, res3: RowModel[]) => RowModel[]>;
export declare const sortModelSelector: import("reselect").OutputSelector<GridState, SortModel, (res: SortingState) => SortModel>;
export declare type SortColumnLookup = Record<string, {
    sortDirection: SortDirection;
    sortIndex?: number;
}>;
export declare const sortColumnLookupSelector: import("reselect").OutputSelector<GridState, Record<string, {
    sortDirection: SortDirection;
    sortIndex?: number | undefined;
}>, (res: SortModel) => Record<string, {
    sortDirection: SortDirection;
    sortIndex?: number | undefined;
}>>;
