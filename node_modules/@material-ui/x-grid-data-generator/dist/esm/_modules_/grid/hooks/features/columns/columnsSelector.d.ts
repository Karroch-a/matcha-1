import { ColumnLookup, Columns, ColumnsMeta } from '../../../models/colDef/colDef';
import { GridState } from '../core/gridState';
export declare const columnsSelector: (state: GridState) => import("../../../models/colDef/colDef").InternalColumns;
export declare const allColumnsFieldsSelector: (state: GridState) => string[];
export declare const columnLookupSelector: (state: GridState) => ColumnLookup;
export declare const allColumnsSelector: import("reselect").OutputSelector<GridState, Columns, (res1: string[], res2: ColumnLookup) => Columns>;
export declare const visibleColumnsSelector: import("reselect").OutputSelector<GridState, Columns, (res: Columns) => Columns>;
export declare const columnsMetaSelector: import("reselect").OutputSelector<GridState, ColumnsMeta, (res: Columns) => ColumnsMeta>;
export declare const filterableColumnsSelector: import("reselect").OutputSelector<GridState, Columns, (res: Columns) => Columns>;
export declare const filterableColumnsIdsSelector: import("reselect").OutputSelector<GridState, string[], (res: Columns) => string[]>;
export declare const visibleColumnsLengthSelector: import("reselect").OutputSelector<GridState, number, (res: Columns) => number>;
export declare const columnsTotalWidthSelector: import("reselect").OutputSelector<GridState, number, (res: ColumnsMeta) => number>;
