import { FilterItem } from '../../../models/filterItem';
import { RowModel } from '../../../models/rows';
import { GridState } from '../core/gridState';
import { FilterModelState } from './FilterModelState';
import { VisibleRowsState } from './visibleRowsState';
export declare const visibleRowsStateSelector: (state: GridState) => VisibleRowsState;
export declare const visibleSortedRowsSelector: import("reselect").OutputSelector<GridState, RowModel[], (res1: VisibleRowsState, res2: RowModel[]) => RowModel[]>;
export declare const visibleRowCountSelector: import("reselect").OutputSelector<GridState, number, (res1: VisibleRowsState, res2: number) => number>;
export declare const filterStateSelector: (state: GridState) => FilterModelState;
export declare const activeFilterItemsSelector: import("reselect").OutputSelector<GridState, FilterItem[], (res: FilterModelState) => FilterItem[]>;
export declare const filterItemsCounterSelector: import("reselect").OutputSelector<GridState, number, (res: FilterItem[]) => number>;
export declare type FilterColumnLookup = Record<string, FilterItem[]>;
export declare const filterColumnLookupSelector: import("reselect").OutputSelector<GridState, Record<string, FilterItem[]>, (res: FilterItem[]) => Record<string, FilterItem[]>>;
