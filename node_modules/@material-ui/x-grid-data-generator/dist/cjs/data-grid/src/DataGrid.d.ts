import * as React from 'react';
import { GridComponentProps } from '../../_modules_/grid';
export declare type DataGridProps = Omit<GridComponentProps, 'disableColumnResize' | 'disableColumnReorder' | 'disableMultipleColumnsFiltering' | 'disableMultipleColumnsSorting' | 'disableMultipleSelection' | 'licenseStatus' | 'apiRef' | 'options' | 'pagination'> & {
    disableColumnResize?: true;
    disableColumnReorder?: true;
    disableMultipleColumnsFiltering?: true;
    disableMultipleColumnsSorting?: true;
    disableMultipleSelection?: true;
    pagination?: true;
    apiRef?: undefined;
};
export declare const DataGrid: React.MemoExoticComponent<React.ForwardRefExoticComponent<Pick<GridComponentProps, "autoHeight" | "rowHeight" | "headerHeight" | "scrollbarSize" | "columnBuffer" | "disableColumnFilter" | "disableColumnMenu" | "disableDensitySelector" | "disableColumnSelector" | "showCellRightBorder" | "showColumnRightBorder" | "disableExtendRowFullWidth" | "sortingOrder" | "pageSize" | "autoPageSize" | "rowsPerPageOptions" | "paginationMode" | "rowCount" | "page" | "sortingMode" | "filterMode" | "hideFooter" | "hideFooterRowCount" | "hideFooterSelectedRowCount" | "hideFooterPagination" | "showToolbar" | "checkboxSelection" | "disableSelectionOnClick" | "logger" | "logLevel" | "sortModel" | "filterModel" | "onCellClick" | "onCellHover" | "onRowClick" | "onRowHover" | "onRowSelected" | "onSelectionChange" | "onColumnHeaderClick" | "onSortModelChange" | "onFilterModelChange" | "onPageChange" | "onPageSizeChange" | "onError" | "onStateChange" | "columnTypes" | "density" | "localeText" | "columns" | "components" | "componentsProps" | "className" | "error" | "nonce" | "loading" | "rows" | "state" | "getRowId"> & {
    disableColumnResize?: true | undefined;
    disableColumnReorder?: true | undefined;
    disableMultipleColumnsFiltering?: true | undefined;
    disableMultipleColumnsSorting?: true | undefined;
    disableMultipleSelection?: true | undefined;
    pagination?: true | undefined;
    apiRef?: undefined;
} & React.RefAttributes<HTMLDivElement>>>;
